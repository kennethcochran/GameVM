name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install dotnet-coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage
          $env:PATH += ";$env:USERPROFILE\.dotnet\tools"
      - name: Create SonarQube config
        shell: pwsh
        run: |
          # Create the .sonarqube/conf directory
          New-Item -ItemType Directory -Path .sonarqube\conf -Force
          
          # Create the SonarQubeAnalysisConfig.xml file
          @'
          <?xml version="1.0" encoding="utf-8"?>
          <SonarQubeAnalysisConfig>
            <Server>
              <Url>https://sonarcloud.io</Url>
              <Organization>kennethcochran</Organization>
              <ProjectKey>kennethcochran_GameVM</ProjectKey>
            </Server>
            <LocalSettings>
              <Property Name="sonar.cs.vscoveragexml.reportsPaths">coverage.xml</Property>
              <Property Name="sonar.coverage.exclusions">**/bin/**,**/obj/**,**/*.Tests/**,**/*.Specs/**</Property>
              <Property Name="sonar.exclusions">**/bin/**,**/obj/**,**/*.Tests/**,**/*.Specs/**,**/*.g.cs</Property>
            </LocalSettings>
          </SonarQubeAnalysisConfig>
          '@ | Out-File -FilePath .sonarqube\conf\SonarQubeAnalysisConfig.xml -Encoding utf8
          
          # Verify the file was created
          Get-ChildItem -Path .sonarqube\conf\ -Recurse | Select-Object FullName
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          $sonarParams = @(
            "/k:GameVM",
            "/o:kennethcochran",
            "/d:sonar.token=$env:SONAR_TOKEN",
            "/d:sonar.host.url=https://sonarcloud.io",
            "/d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml",
            "/d:sonar.coverage.exclusions=**/bin/**,**/obj/**,**/*.Tests/**,**/*.Specs/**",
            "/d:sonar.exclusions=**/bin/**,**/obj/**,**/*.Tests/**,**/*.Specs/**,**/*.g.cs"
          ) -join ' '
          
          # Run SonarQube analysis
          .\.sonar\scanner\dotnet-sonarscanner begin $sonarParams
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          
          dotnet build --no-incremental
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
