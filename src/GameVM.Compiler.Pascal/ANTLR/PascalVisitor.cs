//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/kenne/source/repos/GameVM/src/GameVM.Compiler.Pascal/ANTLR/Pascal.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace GameVM.Compiler.Pascal.ANTLR {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PascalParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IPascalVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] PascalParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.programHeading"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramHeading([NotNull] PascalParser.ProgramHeadingContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] PascalParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] PascalParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.usesUnitsPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsesUnitsPart([NotNull] PascalParser.UsesUnitsPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.labelDeclarationPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabelDeclarationPart([NotNull] PascalParser.LabelDeclarationPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabel([NotNull] PascalParser.LabelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.constantDefinitionPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantDefinitionPart([NotNull] PascalParser.ConstantDefinitionPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.constantDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantDefinition([NotNull] PascalParser.ConstantDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.constantChr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantChr([NotNull] PascalParser.ConstantChrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] PascalParser.ConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.unsignedNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsignedNumber([NotNull] PascalParser.UnsignedNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.unsignedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsignedInteger([NotNull] PascalParser.UnsignedIntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.unsignedReal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsignedReal([NotNull] PascalParser.UnsignedRealContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSign([NotNull] PascalParser.SignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.bool_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool_([NotNull] PascalParser.Bool_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] PascalParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.typeDefinitionPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDefinitionPart([NotNull] PascalParser.TypeDefinitionPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.typeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDefinition([NotNull] PascalParser.TypeDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionType([NotNull] PascalParser.FunctionTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.procedureType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcedureType([NotNull] PascalParser.ProcedureTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_([NotNull] PascalParser.Type_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.simpleType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleType([NotNull] PascalParser.SimpleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScalarType([NotNull] PascalParser.ScalarTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.subrangeType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeType([NotNull] PascalParser.SubrangeTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.typeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeIdentifier([NotNull] PascalParser.TypeIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.structuredType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructuredType([NotNull] PascalParser.StructuredTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.unpackedStructuredType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnpackedStructuredType([NotNull] PascalParser.UnpackedStructuredTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.stringtype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringtype([NotNull] PascalParser.StringtypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayType([NotNull] PascalParser.ArrayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeList([NotNull] PascalParser.TypeListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.indexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexType([NotNull] PascalParser.IndexTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.componentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComponentType([NotNull] PascalParser.ComponentTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.recordType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRecordType([NotNull] PascalParser.RecordTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.fieldList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldList([NotNull] PascalParser.FieldListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.fixedPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixedPart([NotNull] PascalParser.FixedPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.recordSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRecordSection([NotNull] PascalParser.RecordSectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.variantPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariantPart([NotNull] PascalParser.VariantPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.tag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTag([NotNull] PascalParser.TagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.variant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariant([NotNull] PascalParser.VariantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.setType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetType([NotNull] PascalParser.SetTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseType([NotNull] PascalParser.BaseTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.fileType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFileType([NotNull] PascalParser.FileTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.pointerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPointerType([NotNull] PascalParser.PointerTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.variableDeclarationPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationPart([NotNull] PascalParser.VariableDeclarationPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] PascalParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.procedureAndFunctionDeclarationPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcedureAndFunctionDeclarationPart([NotNull] PascalParser.ProcedureAndFunctionDeclarationPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.procedureOrFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcedureOrFunctionDeclaration([NotNull] PascalParser.ProcedureOrFunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.procedureDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcedureDeclaration([NotNull] PascalParser.ProcedureDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] PascalParser.FormalParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.formalParameterSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterSection([NotNull] PascalParser.FormalParameterSectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.parameterGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterGroup([NotNull] PascalParser.ParameterGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierList([NotNull] PascalParser.IdentifierListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.constList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstList([NotNull] PascalParser.ConstListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] PascalParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.resultType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResultType([NotNull] PascalParser.ResultTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] PascalParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.unlabelledStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnlabelledStatement([NotNull] PascalParser.UnlabelledStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleStatement([NotNull] PascalParser.SimpleStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentStatement([NotNull] PascalParser.AssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] PascalParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] PascalParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.relationaloperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationaloperator([NotNull] PascalParser.RelationaloperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.simpleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleExpression([NotNull] PascalParser.SimpleExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.additiveoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveoperator([NotNull] PascalParser.AdditiveoperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] PascalParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.multiplicativeoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeoperator([NotNull] PascalParser.MultiplicativeoperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.signedFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSignedFactor([NotNull] PascalParser.SignedFactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] PascalParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.unsignedConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsignedConstant([NotNull] PascalParser.UnsignedConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.functionDesignator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDesignator([NotNull] PascalParser.FunctionDesignatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] PascalParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.set_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSet_([NotNull] PascalParser.Set_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.elementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementList([NotNull] PascalParser.ElementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElement([NotNull] PascalParser.ElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.procedureStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcedureStatement([NotNull] PascalParser.ProcedureStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.actualParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActualParameter([NotNull] PascalParser.ActualParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.parameterwidth"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterwidth([NotNull] PascalParser.ParameterwidthContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.gotoStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGotoStatement([NotNull] PascalParser.GotoStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.emptyStatement_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStatement_([NotNull] PascalParser.EmptyStatement_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.empty_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmpty_([NotNull] PascalParser.Empty_Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.structuredStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructuredStatement([NotNull] PascalParser.StructuredStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompoundStatement([NotNull] PascalParser.CompoundStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatements([NotNull] PascalParser.StatementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.conditionalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalStatement([NotNull] PascalParser.ConditionalStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] PascalParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseStatement([NotNull] PascalParser.CaseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.caseListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseListElement([NotNull] PascalParser.CaseListElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.repetetiveStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepetetiveStatement([NotNull] PascalParser.RepetetiveStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] PascalParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStatement([NotNull] PascalParser.RepeatStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] PascalParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.forList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForList([NotNull] PascalParser.ForListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.initialValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitialValue([NotNull] PascalParser.InitialValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.finalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinalValue([NotNull] PascalParser.FinalValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.withStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWithStatement([NotNull] PascalParser.WithStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PascalParser.recordVariableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRecordVariableList([NotNull] PascalParser.RecordVariableListContext context);
}
} // namespace GameVM.Compiler.Pascal.ANTLR
