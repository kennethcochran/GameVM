//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/kenne/source/repos/GameVM/src/GameVM.Compiler.Pascal/ANTLR/Pascal.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPascalListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class PascalBaseListener : IPascalListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] PascalParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] PascalParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.programHeading"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgramHeading([NotNull] PascalParser.ProgramHeadingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.programHeading"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgramHeading([NotNull] PascalParser.ProgramHeadingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] PascalParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] PascalParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] PascalParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] PascalParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.usesUnitsPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsesUnitsPart([NotNull] PascalParser.UsesUnitsPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.usesUnitsPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsesUnitsPart([NotNull] PascalParser.UsesUnitsPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.labelDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabelDeclarationPart([NotNull] PascalParser.LabelDeclarationPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.labelDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabelDeclarationPart([NotNull] PascalParser.LabelDeclarationPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] PascalParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] PascalParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.constantDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDefinitionPart([NotNull] PascalParser.ConstantDefinitionPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.constantDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDefinitionPart([NotNull] PascalParser.ConstantDefinitionPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.constantDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDefinition([NotNull] PascalParser.ConstantDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.constantDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDefinition([NotNull] PascalParser.ConstantDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.constantChr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantChr([NotNull] PascalParser.ConstantChrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.constantChr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantChr([NotNull] PascalParser.ConstantChrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] PascalParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] PascalParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unsignedNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedNumber([NotNull] PascalParser.UnsignedNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unsignedNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedNumber([NotNull] PascalParser.UnsignedNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unsignedInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedInteger([NotNull] PascalParser.UnsignedIntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unsignedInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedInteger([NotNull] PascalParser.UnsignedIntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unsignedReal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedReal([NotNull] PascalParser.UnsignedRealContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unsignedReal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedReal([NotNull] PascalParser.UnsignedRealContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSign([NotNull] PascalParser.SignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSign([NotNull] PascalParser.SignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.bool_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool_([NotNull] PascalParser.Bool_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.bool_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool_([NotNull] PascalParser.Bool_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] PascalParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] PascalParser.StringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.typeDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDefinitionPart([NotNull] PascalParser.TypeDefinitionPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.typeDefinitionPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDefinitionPart([NotNull] PascalParser.TypeDefinitionPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.typeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDefinition([NotNull] PascalParser.TypeDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.typeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDefinition([NotNull] PascalParser.TypeDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] PascalParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] PascalParser.FunctionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureType([NotNull] PascalParser.ProcedureTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureType([NotNull] PascalParser.ProcedureTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_([NotNull] PascalParser.Type_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_([NotNull] PascalParser.Type_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleType([NotNull] PascalParser.SimpleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.simpleType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleType([NotNull] PascalParser.SimpleTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.scalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScalarType([NotNull] PascalParser.ScalarTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.scalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScalarType([NotNull] PascalParser.ScalarTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.subrangeType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubrangeType([NotNull] PascalParser.SubrangeTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.subrangeType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubrangeType([NotNull] PascalParser.SubrangeTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.typeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeIdentifier([NotNull] PascalParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.typeIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeIdentifier([NotNull] PascalParser.TypeIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.structuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructuredType([NotNull] PascalParser.StructuredTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.structuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructuredType([NotNull] PascalParser.StructuredTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unpackedStructuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpackedStructuredType([NotNull] PascalParser.UnpackedStructuredTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unpackedStructuredType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpackedStructuredType([NotNull] PascalParser.UnpackedStructuredTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.stringtype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringtype([NotNull] PascalParser.StringtypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.stringtype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringtype([NotNull] PascalParser.StringtypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] PascalParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] PascalParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] PascalParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] PascalParser.TypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.indexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexType([NotNull] PascalParser.IndexTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.indexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexType([NotNull] PascalParser.IndexTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.componentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComponentType([NotNull] PascalParser.ComponentTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.componentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComponentType([NotNull] PascalParser.ComponentTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.recordType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordType([NotNull] PascalParser.RecordTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.recordType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordType([NotNull] PascalParser.RecordTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.fieldList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldList([NotNull] PascalParser.FieldListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.fieldList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldList([NotNull] PascalParser.FieldListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.fixedPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedPart([NotNull] PascalParser.FixedPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.fixedPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedPart([NotNull] PascalParser.FixedPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.recordSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordSection([NotNull] PascalParser.RecordSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.recordSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordSection([NotNull] PascalParser.RecordSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variantPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantPart([NotNull] PascalParser.VariantPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variantPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantPart([NotNull] PascalParser.VariantPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.tag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTag([NotNull] PascalParser.TagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.tag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTag([NotNull] PascalParser.TagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariant([NotNull] PascalParser.VariantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariant([NotNull] PascalParser.VariantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.setType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetType([NotNull] PascalParser.SetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.setType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetType([NotNull] PascalParser.SetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] PascalParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] PascalParser.BaseTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.fileType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileType([NotNull] PascalParser.FileTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.fileType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileType([NotNull] PascalParser.FileTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerType([NotNull] PascalParser.PointerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerType([NotNull] PascalParser.PointerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variableDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationPart([NotNull] PascalParser.VariableDeclarationPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variableDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationPart([NotNull] PascalParser.VariableDeclarationPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] PascalParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] PascalParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureAndFunctionDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureAndFunctionDeclarationPart([NotNull] PascalParser.ProcedureAndFunctionDeclarationPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureAndFunctionDeclarationPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureAndFunctionDeclarationPart([NotNull] PascalParser.ProcedureAndFunctionDeclarationPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureOrFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureOrFunctionDeclaration([NotNull] PascalParser.ProcedureOrFunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureOrFunctionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureOrFunctionDeclaration([NotNull] PascalParser.ProcedureOrFunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureDeclaration([NotNull] PascalParser.ProcedureDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureDeclaration([NotNull] PascalParser.ProcedureDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterList([NotNull] PascalParser.FormalParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.formalParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterList([NotNull] PascalParser.FormalParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.formalParameterSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormalParameterSection([NotNull] PascalParser.FormalParameterSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.formalParameterSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormalParameterSection([NotNull] PascalParser.FormalParameterSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.parameterGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterGroup([NotNull] PascalParser.ParameterGroupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.parameterGroup"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterGroup([NotNull] PascalParser.ParameterGroupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] PascalParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] PascalParser.IdentifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.constList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstList([NotNull] PascalParser.ConstListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.constList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstList([NotNull] PascalParser.ConstListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] PascalParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] PascalParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.resultType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResultType([NotNull] PascalParser.ResultTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.resultType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResultType([NotNull] PascalParser.ResultTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] PascalParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] PascalParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unlabelledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnlabelledStatement([NotNull] PascalParser.UnlabelledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unlabelledStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnlabelledStatement([NotNull] PascalParser.UnlabelledStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.simpleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleStatement([NotNull] PascalParser.SimpleStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.simpleStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleStatement([NotNull] PascalParser.SimpleStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] PascalParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] PascalParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] PascalParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] PascalParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] PascalParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] PascalParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.relationaloperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationaloperator([NotNull] PascalParser.RelationaloperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.relationaloperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationaloperator([NotNull] PascalParser.RelationaloperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.simpleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleExpression([NotNull] PascalParser.SimpleExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.simpleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleExpression([NotNull] PascalParser.SimpleExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.additiveoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveoperator([NotNull] PascalParser.AdditiveoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.additiveoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveoperator([NotNull] PascalParser.AdditiveoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] PascalParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] PascalParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.multiplicativeoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeoperator([NotNull] PascalParser.MultiplicativeoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.multiplicativeoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeoperator([NotNull] PascalParser.MultiplicativeoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.signedFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignedFactor([NotNull] PascalParser.SignedFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.signedFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignedFactor([NotNull] PascalParser.SignedFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] PascalParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] PascalParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.unsignedConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsignedConstant([NotNull] PascalParser.UnsignedConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.unsignedConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsignedConstant([NotNull] PascalParser.UnsignedConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.functionDesignator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDesignator([NotNull] PascalParser.FunctionDesignatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.functionDesignator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDesignator([NotNull] PascalParser.FunctionDesignatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] PascalParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] PascalParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.set_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_([NotNull] PascalParser.Set_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.set_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_([NotNull] PascalParser.Set_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementList([NotNull] PascalParser.ElementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementList([NotNull] PascalParser.ElementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] PascalParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] PascalParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.procedureStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedureStatement([NotNull] PascalParser.ProcedureStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.procedureStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedureStatement([NotNull] PascalParser.ProcedureStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.actualParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActualParameter([NotNull] PascalParser.ActualParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.actualParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActualParameter([NotNull] PascalParser.ActualParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.parameterwidth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterwidth([NotNull] PascalParser.ParameterwidthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.parameterwidth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterwidth([NotNull] PascalParser.ParameterwidthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStatement([NotNull] PascalParser.GotoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.gotoStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStatement([NotNull] PascalParser.GotoStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.emptyStatement_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement_([NotNull] PascalParser.EmptyStatement_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.emptyStatement_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement_([NotNull] PascalParser.EmptyStatement_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.empty_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty_([NotNull] PascalParser.Empty_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.empty_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty_([NotNull] PascalParser.Empty_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.structuredStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructuredStatement([NotNull] PascalParser.StructuredStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.structuredStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructuredStatement([NotNull] PascalParser.StructuredStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompoundStatement([NotNull] PascalParser.CompoundStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.compoundStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompoundStatement([NotNull] PascalParser.CompoundStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatements([NotNull] PascalParser.StatementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.statements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatements([NotNull] PascalParser.StatementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.conditionalStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalStatement([NotNull] PascalParser.ConditionalStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.conditionalStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalStatement([NotNull] PascalParser.ConditionalStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] PascalParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] PascalParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStatement([NotNull] PascalParser.CaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStatement([NotNull] PascalParser.CaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.caseListElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseListElement([NotNull] PascalParser.CaseListElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.caseListElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseListElement([NotNull] PascalParser.CaseListElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.repetetiveStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepetetiveStatement([NotNull] PascalParser.RepetetiveStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.repetetiveStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepetetiveStatement([NotNull] PascalParser.RepetetiveStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] PascalParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] PascalParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatStatement([NotNull] PascalParser.RepeatStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.repeatStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatStatement([NotNull] PascalParser.RepeatStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] PascalParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] PascalParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.forList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForList([NotNull] PascalParser.ForListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.forList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForList([NotNull] PascalParser.ForListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.initialValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitialValue([NotNull] PascalParser.InitialValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.initialValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitialValue([NotNull] PascalParser.InitialValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.finalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinalValue([NotNull] PascalParser.FinalValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.finalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinalValue([NotNull] PascalParser.FinalValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.withStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithStatement([NotNull] PascalParser.WithStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.withStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithStatement([NotNull] PascalParser.WithStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PascalParser.recordVariableList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordVariableList([NotNull] PascalParser.RecordVariableListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PascalParser.recordVariableList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordVariableList([NotNull] PascalParser.RecordVariableListContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
